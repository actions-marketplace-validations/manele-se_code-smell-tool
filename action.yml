name: 'Manele Code Smell Scanner'
description: 'Detects commented-out code in a C/C++ code base.'
author: 'Elena Marzi Tornblad'
branding:
  icon: code
  color: green
inputs:
  source-location:
    description: 'Root directory of source code'
    required: true
    default: 'src'
  github-token:
    description: 'Github Token for automatically posting comments on Pull Requests'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - run: pip install libclang
      if: runner.os == 'Windows'
      shell: cmd
    - run: python ${{ github.action_path }}/sniff.py ${{ inputs.source-location }}
      env:
        DO_SET_OUTPUT: "${{ github.event_name == 'pull_request' && 'YES' || 'NO' }}"
      id: main_win
      if: runner.os == 'Windows'
      shell: cmd
    - uses: actions/github-script@v5
      env:
        COMMENT_BODY: ${{ join(steps.main_win.outputs.*, '\n') }}
      if: ${{ runner.os == 'Windows' && github.event_name == 'pull_request' }}
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.COMMENT_BODY.replace('\\n', '\n')
          })
    - run: pip install libclang
      if: runner.os != 'Windows'
      shell: bash
    - run: python ${{ github.action_path }}/sniff.py ${{ inputs.source-location }}
      env:
        DO_SET_OUTPUT: "${{ github.event_name == 'pull_request' && 'YES' || 'NO' }}"
      id: main_nonwin
      if: runner.os != 'Windows'
      shell: bash
    - uses: actions/github-script@v5
      env:
        COMMENT_BODY: ${{ join(steps.main_nonwin.outputs.*, '\n') }}
      if: ${{ runner.os != 'Windows' && github.event_name == 'pull_request' }}
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.COMMENT_BODY.replace('\\n', '\n')
          })

# https://stackoverflow.com/questions/59191913/get-output-of-a-specific-step-in-github-actions
# https://stackoverflow.com/questions/58066966/commenting-a-pull-request-in-a-github-action
